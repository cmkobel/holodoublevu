# snakemake
# https://github.com/cmkobel/holodoublevu

print("//\n            ~~ holodoublevu ~~")
print(""" 
    Generalization and parametrization 
    of the SuPAcow.
    Phase 1: Proteomics.
//""")

configfile: "config/config.yaml"

print(config)


rule all:
    input:
        # Validation of inputs
        # Filter
        "results/filtered/proteome_intensities.rds",
        
        # Impute
        "results/imputed/proteome_intensities.rds"
        
        # Viz.
        
        # Etc.
        



    
        
# I should probably add fragpipe and start with those raw outputs and whatnot. That should actually be easy since there is a report in the end of mspipeline. But in the interest of time I'm gonna reuse the proteomics long that I should just blindly trust that is OK.


rule validate_metadata:
    input: 
        metadata = config["principal_input_sample_metadata"]
    conda: "envs/r-tidyverse.yaml"
    shell: """
    
        Rscript -e '''
            
            library(tidyverse)
            
            metadata = read_tsv("{input.metadata}")
            
            metadata %>% glimpse()
                
        '''
    """
    

rule validate_inputs:
    """ Just to check that all inputs exist etc. """
    input:
        sample_metadata = config["principal_input_sample_metadata"],
        proteome_amino_acid_sequences = config["principal_input_proteome_amino_acid_sequences"],
        proteome_intensities = config["principal_input_proteome_intensities"],
        proteome2genome_mapping = config["principal_input_proteome2genome_mapping"],
    shell: """
        head -c 1024 {input}
    """
        
    
    
# Now I can just "copy-paste" my scripts from the 26_proteomics_analysis into here and everything will be clean in no time. :) Now I'll drive home to my family in Copenhagen <3


rule filter_proteomics:
    """ Remove outlier samples. """
    input:
        sample_metadata = config["principal_input_sample_metadata"],
        proteome_intensities = config["principal_input_proteome_intensities"],
    output:
        filtered = "results/filtered/proteome_intensities.rds",
    conda: "envs/r-tidyverse.yaml"
    script: "scripts/filtering.R"

    

    