# snakemake
# https://github.com/cmkobel/holodoublevu

print("//\n            ~~ holodoublevu ~~")
print(""" 
    Generalization and parametrization 
    of the SuPAcow.
    Phase 1: Proteomics.
//""")

configfile: "config/config.yaml"

print(config)



rule all:
    input:
        # Annotate proteome
        "results/annotation/annotation.emapper.annotations",
        
        
        # Proteomics
        # Filter
        "results/filtered/proteome_intensities.rds",
        
        # Viz.
        # Alluvial
        
        # Impute
        [f"results/{i}/imputed/proteome_intensities.rds" for i in config["imputation_group"].keys()]
        
        # WGCNA
        # compute modules
        
        
        
        
        

rule annotate_proteome:
    """ Annotate proteome. """
    input: 
        protein_database = config["principal_input_proteome_amino_acid_sequences"]
    output:
        annotations = "results/annotation/annotation.emapper.annotations",
    params:
        db = config["eggnog_database"],
    conda: "envs/eggnog.yaml"
    threads: 128
    shell: """
    
        emapper.py \
            --data_dir {params.db} \
            --output_dir "$(dirname {output.annotations})/" \
            -o annotation \
            -i {input.protein_database} \
            --cpu {threads} \
            --itype proteins \
            --override \
            --temp_dir $TMPDIR \
            --decorate_gff no \
            -m diamond
    
    
    """



    
        
# I should probably add fragpipe and start with those raw outputs and whatnot. That should actually be easy since there is a report in the end of mspipeline. But in the interest of time I'm gonna reuse the proteomics long that I should just blindly trust that is OK.


rule validate_metadata:
    input: 
        metadata = config["principal_input_sample_metadata"]
    conda: "envs/r-tidyverse.yaml"
    shell: """
    
        Rscript -e '''
            
            library(tidyverse)
            
            metadata = read_tsv("{input.metadata}")
            
            metadata %>% glimpse()
                
        '''
    """
    

rule validate_inputs:
    """ Just to check that all inputs exist etc. """
    input:
        sample_metadata = config["principal_input_sample_metadata"],
        proteome_amino_acid_sequences = config["principal_input_proteome_amino_acid_sequences"],
        proteome_intensities = config["principal_input_proteome_intensities"],
        proteome2genome_mapping = config["principal_input_proteome2genome_mapping"],
    shell: """
        head -c 1024 {input}
    """
        
    
    
# Now I can just "copy-paste" my scripts from the 26_proteomics_analysis into here and everything will be clean in no time. :) Now I'll drive home to my family in Copenhagen <3


rule filter_proteomics:
    """ Remove outlier samples. """
    input:
        metadata = config["principal_input_sample_metadata"],
        proteome_intensities = config["principal_input_proteome_intensities"],
    output:
        filtered = "results/filtered/proteome_intensities.rds",
    conda: "envs/r-tidyverse.yaml"
    script: "scripts/filter.R"

    

    
# rule impute
rule impute_proteomics:
    """ Remove outlier samples. """
    input:
        metadata = config["principal_input_sample_metadata"],
        filtered = "results/filtered/proteome_intensities.rds",
    output:
        imputed = "results/{imputation_group}/imputed/proteome_intensities.rds"
    params:
        samples = lambda wildcards: config["imputation_group"][wildcards.imputation_group]
    conda: "envs/r-missranger.yaml"
    script: "scripts/impute.R"


